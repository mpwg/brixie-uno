name: Install Dependencies
description: ""

inputs:
  target-platform:
    description: 'The platform to install dependencies for. #See available values at https://platform.uno/docs/articles/external/uno.check/doc/using-uno-check.html'
    required: false
    default: 'all'
  dotnet-version:
    description: 'Installs and sets the .NET SDK Version'
    required: false
    default: '9.0.x'
  java-version:
    description: 'Installs and sets the Java SDK Version'
    required: false
    default: '11'

runs:
  using: "composite"
  steps:
    # Install .NET
    - name: Setup .NET ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '${{ inputs.dotnet-version }}'
    
    # Install Java
    - name: Install MS OpenJDK ${{ inputs.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '${{ inputs.java-version }}'

    # Install Uno.Check
    - name: Install ${{ inputs.target-platform }} Workloads
      shell: pwsh
      run: |
        # Install uno.check into a local tool path to avoid relying on global installs
        $toolPath = "$env:HOME/.dotnet/tools"
        dotnet tool install --tool-path $toolPath uno.check
        # Ensure the tool path is available to subsequent steps by adding it to GITHUB_PATH
        # Note: use a bash step below to append to $GITHUB_PATH so it affects the job environment
    # Run Uno.Check
    - name: Run Uno.Check
      shell: pwsh
      run: |
        ("${{ inputs.target-platform }} ".Split(' ') | ForEach-Object {
          $target = $_.Replace("_win", "").Replace("_macos", "")
          if (![string]::IsNullOrEmpty($target)) {
            echo "target: $target"
            uno-check -v --ci --non-interactive --fix --target $target --skip vswin --skip vsmac --skip xcode --skip vswinworkloads --skip androidemulator --skip dotnetnewunotemplates
            echo "uno-check finished for target: $target "
          }
        })
    - name: Add dotnet tools to PATH
      shell: bash
      run: |
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
    - name: Verify uno-check
      shell: bash
      run: |
        if ! command -v uno-check >/dev/null 2>&1; then
          echo "uno-check was not found on PATH"
          exit 1
        fi
        uno-check --version || true
